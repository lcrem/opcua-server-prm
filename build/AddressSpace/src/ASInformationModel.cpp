
/*  Â© Copyright CERN, 2015. All rights not expressly granted are reserved.
    Authors(from Quasar team): Piotr Nikiel
        
    This file is part of Quasar.
   
    Quasar is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public Licence as published by
    the Free Software Foundation, either version 3 of the Licence.
    Quasar is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public Licence for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with Quasar.  If not, see <http://www.gnu.org/licenses/>.
    
    This file was completely generated by Quasar (additional info: using transform designToInformationModelBody.xslt) 
    on 2020-02-24T14:56:47.592Z
 */


#include <iostream>
#include <ASUtils.h>
#include <ASInformationModel.h>


namespace AddressSpace
{

  void ASInformationModel::createNodesOfTypes (ASNodeManager * nm)
  {
#ifndef BACKEND_OPEN62541

    UaObjectTypeSimple *type;
    UaStatus addStatus;

      type =
      new UaObjectTypeSimple ("Motor",
			      UaNodeId (AS_TYPE_MOTOR,
					nm->getNameSpaceIndex ()),
			      /* locale id */ UaString (""), /*is abstract */
			      OpcUa_False);
      addStatus =
      nm->addNodeAndReference (OpcUaId_BaseObjectType, type,
			       OpcUaId_HasSubtype);
    if (!addStatus.isGood ())
      {
	std::cout << "While adding a type definition node: ";
	ASSERT_GOOD (addStatus);
      }

#endif				// BACKEND_OPEN62541
  }


}
